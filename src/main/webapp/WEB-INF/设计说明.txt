1、流程
	a、某个用户创建讨论 > 用户在客户端首先连接BayeuxService，进行connect和握手，完成后进行subscribe，用户自动创建讨论的channel一定是在/conference的子channel，如/channel/lanch，这样在服务端就可以被统一拦截后进行分组处理。
	b、其他用户加入讨论 > 用户首先在客户端注册登录，然后指定会议，即subcribe到指定的channel，这个channel是/conference的子channel，然后加入讨论 
	c、所有讨论内容自动在服务端被记录，首先记录在缓存中，而后定时会持久化到数据库或文件中存储> 服务端收到任何来自/conference的子channel的信息后，根据子channel名称进行分组记录。 
	d、 新用户加入可直接看到当前讨论，点击讨论历史可以看到历史讨论信息>
	e、用户退出讨论组>用户点击退出讨论后，向/service/member发送信息，服务端截获后，根据当前用户所退出的讨论组，通过/memberschannel通知对应讨论组的其他在线用户
	f、用户强制关闭网页的时候，自动调用用户的
2、内部工作
	a、首先需要定义几个顶级的channel，如/members代表处理用户的注册登录管理 /conference负责进行讨论及分组。
	b、用户的登录：用户在登录时客户端需要提交用户自己的信息以及加入的讨论组信息。
		因为/service channel下的内容在客户端只能单向发布而不能被监听，因此将用户登录加入讨论信息通过/service/members进行提交，
		服务端截获之后对其进行解析，获取用户的信息和用户要加入的讨论会议后，再通过/members/讨论组 通知目前在讨论组中的所有其他在线用户。
	c、用户发言：用户在特定讨论会议中的发言对关注这个会议的所有用户都是公开的，所以使用/conference/讨论名称 通道来进行传输，对所有在线用户都是可见的，但考虑到分组的问题，还是需要通过服务端来进行分组分发。
	d、全系统提醒（待定功能）：仅为在线用户提供，无论在哪个讨论组都能够收到，实现通过客户端在后台subscribe统一的 /public channel，该信息由服务端发送，客户端收到后自动弹出。
	